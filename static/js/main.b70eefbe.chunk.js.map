{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Controls/Controls.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js","components/Controls/Controls.module.css","components/Section/Section.module.css"],"names":["module","exports","Controls","options","onLeaveFeedback","className","s","Control__list","map","option","type","onClick","Control__button","Statistics","good","neutral","bad","total","positivePercentage","Stat__list","Stat__item","Section","title","children","h1","Notification","message","App","state","visibleStatistics","increment","evt","setState","prevState","value","target","textContent","toLowerCase","countTotalFeedback","countPositiveFeedback","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,gC,uCCA5BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,WAAa,iC,+IC4B5DC,EAzBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC3B,OACE,mCACE,oBAAIC,UAAWC,IAAEC,cAAjB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEC,KAAK,SACLC,QAASP,EACTC,UAAWC,IAAEM,gBAHf,SAKGH,KANIA,W,gBCIJI,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIb,UAAWC,IAAEa,WAAjB,UACE,qBAAId,UAAWC,IAAEc,WAAjB,mBAAoCN,KACpC,qBAAIT,UAAWC,IAAEc,WAAjB,sBAAuCL,KACvC,qBAAIV,UAAWC,IAAEc,WAAjB,kBAAmCJ,KACnC,qBAAIX,UAAWC,IAAEc,WAAjB,oBAAqCH,KACrC,qBAAIZ,UAAWC,IAAEc,WAAjB,gCAAiDF,EAAjD,W,gBCSWG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIlB,UAAWC,IAAEkB,GAAjB,SAAsBF,IACrBC,M,iBCIQE,EARa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,mBAAGrB,UAAWC,IAAEoB,QAAhB,SAA0BA,KC0EpBC,E,4MAxEbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,G,EAGTY,mBAAoB,E,EAUpBC,UAAY,SAAAC,GACV,EAAKF,mBAAoB,EACzB,EAAKG,UAAS,SAAAC,GACZ,IACMC,EADaH,EAAXI,OACaC,YAAYC,cACjC,OAAO,eACJH,EAAQD,EAAUC,GAAS,O,EAKlCI,mBAAqB,SAACxB,EAAMC,EAASC,GACnC,OAAOF,EAAOE,EAAMD,G,EAGtBwB,sBAAwB,SAACzB,EAAMC,EAASC,GACtC,IAAMC,EAAQH,EAAOE,EAAMD,EAC3B,OAAkB,IAAVE,EAAc,EAAKH,EAAOG,EAAS,KAAKuB,W,4CAGlD,WACE,MAA+BC,KAAKb,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfc,EAAcW,KAAdX,UAER,OACE,qCACE,cAAC,EAAD,CAASR,MAAO,wBAAhB,SACE,cAAC,EAAD,CACElB,gBAAiB0B,EACjB3B,QAAS,CAAC,OAAQ,UAAW,WAIjC,cAAC,EAAD,CAASmB,MAAO,aAAhB,UAC8B,IAA3BmB,KAAKZ,kBACJ,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKH,mBAAmBxB,EAAMC,EAASC,GAC9CE,mBAAoBuB,KAAKF,sBACvBzB,EACAC,EACAC,KAIJ,cAAC,EAAD,CAAcU,QAAQ,+B,GAjEhBgB,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B/C,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,gBAAkB,oC,kBCApFD,EAAOC,QAAU,CAAC,GAAK,uB","file":"static/js/main.b70eefbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2M8Gu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stat__list\":\"Statistics_Stat__list__1hYpf\",\"Stat__item\":\"Statistics_Stat__item__3noB_\"};","import React from 'react';\nimport s from './Controls.module.css';\nimport PropTypes from 'prop-types';\n\nconst Controls = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      <ul className={s.Control__list}>\n        {options.map(option => (\n          <li key={option}>\n            <button\n              type=\"button\"\n              onClick={onLeaveFeedback}\n              className={s.Control__button}\n            >\n              {option}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nControls.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={s.Stat__list}>\n    <li className={s.Stat__item}>Good: {good}</li>\n    <li className={s.Stat__item}>Neutral: {neutral}</li>\n    <li className={s.Stat__item}>Bad: {bad}</li>\n    <li className={s.Stat__item}>Total: {total}</li>\n    <li className={s.Stat__item}>Positive feedback: {positivePercentage}%</li>\n  </ul>\n);\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h1 className={s.h1}>{title}</h1>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport const Notification = ({ message }) => {\n  return <p className={s.message}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Controls from './Controls'; //* вместо названия FeedbackOptions\nimport Statistics from './Statistics';\nimport Section from './Section';\nimport Notification from './Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n  };\n\n  visibleStatistics = false;\n\n  // goodIncrement = evt => {\n  //   this.setState(prevState => {\n  //     return {\n  //       good: prevState.good + 1,\n  //     };\n  //   });\n  // };\n\n  increment = evt => {\n    this.visibleStatistics = true;\n    this.setState(prevState => {\n      const { target } = evt;\n      const value = target.textContent.toLowerCase();\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = (good, neutral, bad) => {\n    return good + bad + neutral;\n  };\n\n  countPositiveFeedback = (good, neutral, bad) => {\n    const total = good + bad + neutral;\n    return (total === 0 ? 0 : (good / total) * 100).toFixed();\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const { increment } = this;\n\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <Controls\n            onLeaveFeedback={increment}\n            options={['good', 'neutral', 'bad']}\n          />\n        </Section>\n\n        <Section title={'Statistics'}>\n          {this.visibleStatistics === true ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback(good, neutral, bad)}\n              positivePercentage={this.countPositiveFeedback(\n                good,\n                neutral,\n                bad,\n              )}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control__list\":\"Controls_Control__list__1v8KQ\",\"Control__button\":\"Controls_Control__button__v1AGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Section_h1__WbobD\"};"],"sourceRoot":""}